require_relative 'images_serializer'

module Redbreast
  module Serializer
    module Image
      class ObjC < Base
        include Helper::General

        def save(output_source_path)
          FileUtils.mkdir_p output_source_path unless File.exist? output_source_path

          h_file = ERB.new(h_template, nil, '-').result(binding)
          m_file = ERB.new(m_template, nil, '-').result(binding)

          File.write(File.join(output_source_path, "UIImage+Named.h"), h_file)
          File.write(File.join(output_source_path, "UIImage+Named.m"), m_file)
        end

        def h_template()
<<-TEMPLATE

#import <UIKit/UIKit.h>

//THIS FILE IS AUTOGENERATED, DO NOT EDIT BY HAND
@interface UIImage (Named)

<%- image_names.each do |name| -%>
+ (instancetype)<%= clean_variable_name(name) %>;
<%- end -%>

@end

TEMPLATE
        end

        def m_template()
<<-TEMPLATE

#import <UIKit/UIKit.h>

//THIS FILE IS AUTOGENERATED, DO NOT EDIT BY HAND
@implementation UIImage (GIF)

<%- image_names.each do |name| -%>
+(instancetype)<%= clean_variable_name(name) %>
{
    [UIImage imageNamed:@"<%= name %>" inBundle:<%= bundle_reference %> compatibleWithTraitCollection:nil];
}
<%- end -%>

@end

TEMPLATE
        end


      end
    end
  end
end
